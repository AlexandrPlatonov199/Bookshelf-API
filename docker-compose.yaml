version: "3"
services:
  database:
    image: postgres:16.0-bookworm
    secrets:
      - postgresql_password
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgresql_password
    volumes:
      - ${DATABASE_DIR:-./database_data}:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
    deploy:
      replicas: 1

  users:
    image: ${BOOK_IMAGE:-book}
    depends_on:
      - database
    environment:
      DB_DSN: ${USERS_DB_DSN:-postgresql+asyncpg://users:P%40ssw0rd@database:5432/users}
      ROOT_URL: ${USERS_ROOT_URL:-http://localhost:3000}
      ROOT_PATH: ${USERS_ROOT_PATH}
      ALLOWED_ORIGINS: ${USERS_ALLOWED_ORIGINS:-["http://localhost:3050"]}
    command: [ "users", "api", "run" ]
    ports:
      - target: 8000
        published: ${USERS_PORT:-3000}
        mode: host
    deploy:
      replicas: 1

#  users:
#    image: ${BOOKS_IMAGE:-books}
#    environment:
#      DB_DSN: ${USERS_DB_DSN:-postgresql+asyncpg://users:P%40ssw0rd@database:5432/users}
#      ROOT_URL: ${USERS_ROOT_URL:-http://localhost:8000/users}
#      ROOT_PATH: ${USERS_ROOT_PATH:-/users}
#      ALLOWED_ORIGINS: ${USERS_ALLOWED_ORIGINS:-["http://localhost:8000"]}
#    volumes:
#      - ${USERS_MEDIA_DIR_PATH:-./users_data/media}:/media
#    command: [ "users", "api", "run" ]
#    deploy:
#      labels:
#        - "traefik.enable=true"
#        - "traefik.http.middlewares.users-stripprefix.stripprefix.prefixes=${USERS_ROOT_PATH:-/users}"
#        - "traefik.http.routers.users.rule=PathPrefix(`${USERS_ROOT_PATH:-/users}`)"
#        - "traefik.http.routers.users.middlewares=users-stripprefix"
#        - "traefik.http.routers.users.entrypoints=web"
#        - "traefik.http.services.users.loadbalancer.server.port=8000"
#      update_config:
#        order: start-first
#      replicas: 1


secrets:
  postgresql_password:
    external: true
    name: ${POSTGRESQL_PASSWORD_NAME:-postgresql_password}